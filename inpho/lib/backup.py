#!/usr/bin/python
import tarfile
from datetime import date
import os.path
import os
from glob import iglob

import sqlalchemy.lib.url

import inpho.config
import inpho.corpus

# configure path information
backup_path = inpho.config.get('general', 'backup_path')
remote_file = os.path.join('/Users/inpho/Sites/sep/entries.tar')

def sep(remote_file=None):
    """ Creates a backup of all SEP entries. """
    timestamp = date.today().strftime("%Y%m%d")
    backup_file = os.path.join(backup_path, 'pages_%s.tar' % timestamp)

    with tarfile.open(backup_file, 'w') as tar:
        for name in iglob(os.path.join(inpho.corpus.path, '*/*.html')):
            tar.add(name, arcname=name.replace(inpho.corpus.path, ''))
    
    if remote_file:
        os.symlink(backup_file, remote_file)

def data(remote_file=None):
    """
    Backs up the InPhO database, excluding all user information.

    Equivilent to:
    mysqldump $LOGIN --no-data > $OUTFILE
    mysqldump $LOGIN --tables entity groups idea idea_instance_of idea_link_to institution journal journal_abbr nationality ontotree profession school_of_thought searchpatterns sep_areas sepentries thinker thinker_has_influenced thinker_has_nationality thinker_has_profession work >> $OUTFILE
    """
    raise NotImplementedError

def graph(remote_file=None):
    """
    Backs up the most recent InPhO graph. This may be better done by just
    symlinking the daily data mining runs generated by inpho/corpus/sep.py, but
    since we may include multiple corpora, this will be necessary to write.
    """
    raise NotImplementedError

if __name__ == '__main__':
    from optparse import OptionParser
    usage = "usage: $prog [options]"

    parser = OptionParser(usage)
    parser.set_defaults(mode=None, safe=True)
    parser.add_option('--sep', action='store_const', 
                      dest='mode', const='sep',
                      help="backup the SEP corpus")
    parser.add_option('--data', action='store_const', 
                      dest='mode', const='sql',
                      help="backup inpho entities")
    parser.add_option('--safe', action='store_true', dest='safe',
                      help="safe data backup, excludes user info [default]")
    parser.add_option('--unsafe', action='store_false', dest='safe',
                      help="unsafe data backup, includes user info")
    parser.add_option('--graph', action='store_const',
                      dest='mode', const='graph',
                      help="backup graph data"
    options, args = parser.parse_args()

    if options.mode == 'sep':
        sep()
    elif options.mode == 'data':
        data()
    elif options.mode == 'graph':
        graph()
